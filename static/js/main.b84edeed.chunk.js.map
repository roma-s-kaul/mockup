{"version":3,"sources":["store/index.js","components/Idea.js","components/Footer.js","components/Result.js","components/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["store","createStore","useStyles","makeStyles","theme","root","margin","spacing","width","gridStyle","flexGrow","paper","padding","textAlign","color","backgroundColor","subHead","buttonStyle","extendedIcon","marginRight","radioStyles","icon","borderRadius","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","display","content","StyledRadio","props","classes","Radio","className","disableRipple","clsx","Idea","textState","boolState","setTextState","setBoolState","onToggle","button","FormControl","component","RadioGroup","aria-label","name","onChange","e","target","value","FormControlLabel","control","label","noValidate","autoComplete","TextField","id","multiline","rows","defaultValue","variant","Button","size","onClick","Footer","style","justifyContent","paddingTop","href","paddingBottom","Result","data","nodes","links","source","config","nodeHighlightBehavior","automaticRearrangeAfterDropNode","staticGraph","maxZoom","minZoom","panAndZoom","node","highlightStrokeColor","link","highlightColor","d3","gravity","Header","App","useState","showResultState","setResultState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b84edeed.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst reducer = () => {\n\n}\n\n\nconst store = createStore(reducer)\nexport default store;\n\n","import React, {useState} from 'react';\n//import IdeaCard from './IdeaCard';\nimport './Idea.css'\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\n\n\nconst Idea = ({textState, boolState, setTextState, setBoolState, onToggle}) => {\n    const classes = useStyles();\n    const grid = gridStyle();\n    const button = buttonStyle();\n    return(\n            <div className = 'main-body'>\n                <div className = 'header'>\n                    <h1>What is your starting point?</h1>\n                </div>\n                <div className = 'body-form'>\n                  <FormControl component=\"fieldset\">\n                      <RadioGroup aria-label=\"startPoint\" name=\"startPoint\" onChange={e => setBoolState(e.target.value)} value={boolState}>\n                          <FormControlLabel value=\"idea\" control={<StyledRadio />} label=\"I will describe my product idea below.\" />\n                          <FormControlLabel value=\"technology\" control={<StyledRadio />} label=\"I will describe a technology I want to commercialize below.\" />\n                      </RadioGroup>\n                  </FormControl>\n                </div>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                     <TextField\n                         id=\"outlined-multiline-static\"   \n                         multiline\n                         rows={10}\n                         defaultValue=\"\"\n                         variant=\"outlined\"\n                         color = \"secondary\"\n                         value={textState}\n                         onChange = {e => setTextState(e.target.value)}\n                     />\n                  </form>\n                  <div>\n                  <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={button.margin} onClick= {onToggle}>\n                      Get Market Intel\n                  </Button>\n                  </div>\n                  <div>\n                      *Note: All information you enter is treated as confidential and will not be saved.\n                  </div>\n            </div>\n    \n    )\n}\n\nconst styles = {\n    container: {\n        backgroundColor: \"#ccc\",\n        borderRadius: 3,\n        width: 300\n    }\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(8),\n        width: '100ch',\n      },\n    },\n  }));\n\nconst gridStyle = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: '#000000',\n      backgroundColor: '#ccc'\n    },\n    subHead: {\n        flexGrow: 1,\n        textAlign: 'center',\n        color: 'white',\n        backgroundColor: '#325ea8',\n        padding: theme.spacing(2)\n        \n    }\n}));\n\nconst buttonStyle = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n      \n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n}));\n\nconst radioStyles = makeStyles({\n    root: {\n      '&:hover': {\n        backgroundColor: 'transparent',\n      },\n    },\n    icon: {\n      borderRadius: '50%',\n      width: 16,\n      height: 16,\n      boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n      backgroundColor: '#f5f8fa',\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n      '$root.Mui-focusVisible &': {\n        outline: '2px auto rgba(19,124,189,.6)',\n        outlineOffset: 2,\n      },\n      'input:hover ~ &': {\n        backgroundColor: '#ebf1f5',\n      },\n      'input:disabled ~ &': {\n        boxShadow: 'none',\n        background: 'rgba(206,217,224,.5)',\n      },\n    },\n    checkedIcon: {\n      backgroundColor: '#137cbd',\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n      '&:before': {\n        display: 'block',\n        width: 16,\n        height: 16,\n        backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n        content: '\"\"',\n      },\n      'input:hover ~ &': {\n        backgroundColor: '#106ba3',\n      },\n    },\n});\n\nfunction StyledRadio(props) {\n    const classes = radioStyles();\n    return (\n        <Radio\n            className={classes.root}\n            disableRipple\n            color=\"default\"\n            checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n            icon={<span className={classes.icon} />}\n            {...props}\n        />  \n    );\n}\n\nexport default Idea;","import React from 'react';\nimport './Footer.css'\n\nconst Footer = () => {\n    return(\n        <div className = 'main-footer'>\n            <div className = 'container'>\n                <div className='row' style={{\n                    display: 'flex',\n                    justifyContent: 'space-evenly',\n                    paddingTop: '1%'\n                }}> \n                        <div><a href='https://www.google.co.in/?gws_rd=ssl'> Watch Video Tutorials </a></div> \n                        <div><a href='https://www.google.co.in/?gws_rd=ssl'> Who We Are and Our Mission </a></div> \n                        <div><a href='https://www.google.co.in/?gws_rd=ssl'> Additional Entrepreneurship Links </a></div> \n                </div>\n                <div className='row' style={{\n                    display: 'flex',\n                    justifyContent: 'space-evenly',\n                    paddingBottom: '1%'\n                    \n                }}> \n                        <div><a href='https://www.google.co.in/?gws_rd=ssl'> Business Open Knowledge Network Home </a></div>\n                        <div><a href='https://www.google.co.in/?gws_rd=ssl'> Resources For Women Entrepreneurs </a></div>\n                </div>\n            </div>\n        </div>\n      \n    );\n    \n}\n\nexport default Footer;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport './Result.css'\nimport { Graph } from 'react-d3-graph';\n\nconst styles = {\n    container: {\n        backgroundColor: \"#ccc\",\n        borderRadius: 3,\n        width: 300\n    }\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(8),\n        width: '100ch',\n      },\n    },\n  }));\n\nconst gridStyle = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: '#000000',\n      backgroundColor: '#ccc'\n      \n    },\n}));\n\nconst buttonStyle = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n}));\n\n\nconst Result = ({onToggle}) => {\n    const classes = useStyles();\n    const grid = gridStyle();\n    const button = buttonStyle();\n\n    const data = {\n        nodes: [\n            { id: \"Your idea\", color: \"#325ea8\" }, \n            { id: \"Company 1\" }, \n            { id: \"Company 2\" }, \n            { id: \"Company 3\" }, \n            { id: \"Company 4\" }\n        ],\n        links: [\n            { source: \"Company 1\", target: \"Your idea\" }, \n            { source: \"Company 2\", target: \"Your idea\" },\n            { source: \"Company 3\", target: \"Your idea\" },\n            { source: \"Company 4\", target: \"Your idea\" }\n        ],\n    };\n     \n    // the graph configuration, you only need to pass down properties\n    // that you want to override, otherwise default ones will be used\n    const myConfig = {\n        nodeHighlightBehavior: true,\n        automaticRearrangeAfterDropNode: true,\n        staticGraph: false,\n        maxZoom: 1,\n        minZoom: 1,\n        width: 600,\n        panAndZoom: false,\n        node: {\n            color: \"white\",\n            size: 2000,\n            highlightStrokeColor: \"blue\",\n        },\n        link: {\n            highlightColor: \"lightblue\",\n            color: 'black'\n        },\n        d3: {\n            gravity: -1000,\n        }\n    };\n\n    return(\n        <div className = 'main-body'>\n            <div className = 'header'>\n                <h1>Results: Market Intelligence</h1>\n            </div>\n            <div className = 'body'>\n                    <h2><b>YOUR IDEA IS A NEW PRODUCT!</b>\n                        <div className=\"divider-mini\"/>\n                        <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={button.margin} onClick={onToggle}>\n                            Edit description\n                        </Button>\n                    </h2>\n                    <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={button.margin}>\n                        Show Competitors\n                    </Button>\n                    <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={button.margin}>\n                        Show Customers\n                    </Button>\n                    <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={button.margin}>\n                        Show Technologies\n                    </Button>\n\n                    <Graph\n                        id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n                        data={data}\n                        config={myConfig}\n                    />\n\n                    <div className = 'bottom-button'>\n                        <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={button.margin}>\n                            Print Report\n                        </Button>\n                    </div>\n                </div>\n        </div>\n\n    );\n}\n\nexport default Result;\n","\nimport React from 'react';\nimport './Header.css';\n\nfunction Header() {\n    return (\n      <div className=\"Title\">\n        <header>\n          <div className='superHead'>Entrepreneur's Portal</div>\n          <div className='subHead'>Business Open Knowledge Network</div>\n        </header>\n      </div>\n    )\n  }\n\n  export default Header;","import React, {useState} from 'react';\nimport Idea from './Idea';\nimport Footer from './Footer';\nimport Result from './Result';\nimport Header from './Header';\n\n\nfunction App() {\n  const [showResultState, setResultState] = useState(true)\n  const [textState, setTextState] = useState('');\n    const [boolState, setBoolState] = useState('idea');\n  \n  return (\n    <div className=\"page-container\">\n      <div className=\"content-wrap\"> \n        <Header />\n       { showResultState ? <Idea textState={textState} boolState={boolState} setTextState={setTextState} setBoolState={setBoolState} onToggle={() => setResultState(!showResultState)} /> : <Result onToggle={() => setResultState(!showResultState)} /> } \n      \n      <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store = {store}><App /></Provider>,  \n  document.getElementById('root') );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}